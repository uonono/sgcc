server:
  port: 9000
  ssl: #ssl配置
    key-store: classpath:mykeystore.jks
    key-store-type: jks
    key-store-password: changeit
spring:
  security:
    user:
      name: "user"
      password: "password"
      roles:
        - "USER"
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:9000/oauth2/jwks
      authorizationserver:
        issuer: http://localhost:9000
        client:
          login-client:
            registration:
              client-id: "login-client"
              client-secret: "{noop}openid-connect"
              client-authentication-methods:
                - "client_secret_basic"
              authorization-grant-types:
                - "authorization_code"
                - "refresh_token"
              redirect-uris:
                - "http://127.0.0.1:8080/login/oauth2/code/login-client"
                - "http://127.0.0.1:8080/authorized"
              scopes:
                - "openid"
                - "profile"
            require-authorization-consent: true
          messaging-client:
            registration:
              client-id: "messaging-client"
              client-secret: "{noop}secret"
              client-authentication-methods:
                - "client_secret_basic"
              authorization-grant-types:
                - "client_credentials"
              scopes:
                - "message:read"
                - "message:write"

  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML5
    cache: false

jwt:
  private.key: classpath:app.key
  public.key: classpath:app.pub

eureka:
  instance:
    hostname: localhost
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://127.0.0.1:8761/eureka/
